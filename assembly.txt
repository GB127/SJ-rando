$C87B : apply_gravity()
    
    $C87B:A5 6F     LDA $006F = #$08                             A:00 X:00 Y:01 S:FB P:nvubdiZc 
    $C87D:85 0C     STA $000C = #$00                             A:08 X:00 Y:01 S:FB P:nvubdizc 
    $C87F : springeffect()
    $C89A:24 D2     BIT $00D2 = #$00                             A:7C X:00 Y:01 S:FB P:nvubdizC 
    $C89C:10 1B     BPL $C8B9                                    A:7C X:00 Y:01 S:FB P:nvubdiZC 
        01:C89E:A4 D1     LDY $00D1 = #$00
        01:C8A0:C0 02     CPY #$02
        01:C8A2:D0 12     BNE $C8B6
        01:C8A4:A5 98     LDA $0098 = #$00
        01:C8A6:29 FC     AND #$FC
        01:C8A8:85 04     STA $0004 = #$08
        01:C8AA:A5 5D     LDA $005D = #$E2
        01:C8AC:4A        LSR
        01:C8AD:29 03     AND #$03
        01:C8AF:05 04     ORA $0004 = #$08
        01:C8B1:85 98     STA $0098 = #$00
        01:C8B3:4C C0 C8  JMP $C8C0
        01:C8B6:20 EE D7  JSR $D7EE
    $C8B9:A9 07     LDA #$07                                     A:7C X:00 Y:01 S:FB P:nvubdiZC 
    $C8BB:A0 24     LDY #$24                                     A:07 X:00 Y:01 S:FB P:nvubdizC 
    $C8BD:20 AC FF  JSR $FFAC                                    A:07 X:00 Y:24 S:FB P:nvubdizC 
        $FFAC:84 72     STY $0072 = #$1B                             A:07 X:00 Y:24 S:F9 P:nvubdizC 
        $FFAE:85 74     STA $0074 = #$07                             A:07 X:00 Y:24 S:F9 P:nvubdizC 
        $FFB0:A5 75     LDA $0075 = #$00                             A:07 X:00 Y:24 S:F9 P:nvubdizC 
        $FFB2:48        PHA                                          A:00 X:00 Y:24 S:F9 P:nvubdiZC 
        $FFB3:29 18     AND #$18                                     A:00 X:00 Y:24 S:F8 P:nvubdiZC 
        $FFB5:05 74     ORA $0074 = #$07                             A:00 X:00 Y:24 S:F8 P:nvubdiZC 
        $FFB7:85 75     STA $0075 = #$00                             A:07 X:00 Y:24 S:F8 P:nvubdizC 
        $FFB9:A8        TAY                                          A:07 X:00 Y:24 S:F8 P:nvubdizC 
        $FFBA:99 CB FF  STA $FFCB,Y @ $FFD2 = #$07                   A:07 X:00 Y:07 S:F8 P:nvubdizC 
        $FFBD:20 C8 FF  JSR $FFC8                                    A:07 X:00 Y:07 S:F8 P:nvubdizC 
            $FFC8:6C 72 00  JMP ($0072) = $8024                          A:07 X:00 Y:07 S:F6 P:nvubdizC 
            $8024:4C 86 88  JMP $8886                                    A:07 X:00 Y:07 S:F6 P:nvubdizC 
                $8886:4C 8A 88  JMP $888A                                    A:07 X:00 Y:07 S:F6 P:nvubdizC 
                    $888A:A2 00     LDX #$00                                     A:07 X:00 Y:07 S:F6 P:nvubdizC 
                    $888C:A5 0C     LDA $000C = #$08                             A:07 X:00 Y:07 S:F6 P:nvubdiZC 
                    $888E:30 23     BMI $88B3                                    A:08 X:00 Y:07 S:F6 P:nvubdizC 
                    $8890:4A        LSR                                          A:08 X:00 Y:07 S:F6 P:nvubdizC 
                    $8891:4A        LSR                                          A:04 X:00 Y:07 S:F6 P:nvubdizc 
                    $8892:85 08     STA $0008 = #$00                             A:02 X:00 Y:07 S:F6 P:nvubdizc 
                    $8894:48        PHA                                          A:02 X:00 Y:07 S:F6 P:nvubdizc 
                    $8895:AD 55 03  LDA $0355 = #$00                             A:02 X:00 Y:07 S:F5 P:nvubdizc 
                    $8898:4A        LSR                                          A:00 X:00 Y:07 S:F5 P:nvubdiZc 
                    $8899:B0 11     BCS $88AC                                    A:00 X:00 Y:07 S:F5 P:nvubdiZc
                        $88AC:68        PLA                                          A:00 X:00 Y:07 S:F5 P:nvubdiZC 
                        $88AD:20 EC B8  JSR $B8EC                                    A:02 X:00 Y:07 S:F6 P:nvubdizC 
                            $B8EC : add_Yspeed(A) 
                        $88B0:4C C5 88  JMP $88C5
                    $889B:68        PLA                                          A:00 X:00 Y:07 S:F5 P:nvubdiZc 
                    $889C:20 07 B9  JSR $B907                                    A:02 X:00 Y:07 S:F6 P:nvubdizc 
                        $B907 : reduce_Yspeed(A)
                    $889F:D0 24     BNE $88C5
                    $88A1:AD 55 03  LDA $0355 = #$01
                    $88A4:49 01     EOR #$01
                    $88A6:8D 55 03  STA $0355 = #$01
                    $88A9:4C C5 88  JMP $88C5

87D2 : change_Yspeed()
    -- Notes

    -- Addresses
        $0355 : Y direction
        $0374 : Rocket direction
        $00C5 : ???
        $8866 : Determine if need to add or substract speed according to the direction of the pod!
        $000C : Gravity related?
        $0061 : Y acceleration

    -- [$87D2, $87DA] : Get Y direction and compare with the rocket's direction


    $87D2:BD 55 03  LDA $0355,X @ $0355 = #$00                   A:3B X:00 Y:00 S:F4 P:nvUBdiZC 
    $87D5:29 01     AND #$01                                     A:00 X:00 Y:00 S:F4 P:nvUBdiZC 
    $87D7:AC 74 03  LDY $0374 = #$1A                             A:00 X:00 Y:00 S:F4 P:nvUBdiZC 
    $87DA:59 66 88  EOR $8866,Y @ $8880 = #$00                   A:00 X:00 Y:1A S:F4 P:nvUBdizC 
    $87DD:F0 1E     BEQ $87FD                                    A:00 X:00 Y:1A S:F4 P:nvUBdiZC 
        -> We don't want to reduce speed : jump reduce speed
    $87DF:A5 C5     LDA $00C5 = #$48                             A:01 X:00 Y:09 S:F4 P:nvUBdizC 
    $87E1:38        SEC                                          A:48 X:00 Y:09 S:F4 P:nvUBdizC 
    $87E2:E5 0C     SBC $000C = #$1E                             A:48 X:00 Y:09 S:F4 P:nvUBdizC 
    $87E4:85 C5     STA $00C5 = #$48                             A:2A X:00 Y:09 S:F4 P:nvUBdizC 
    $87E6:B0 02     BCS $87EA                                    A:2A X:00 Y:09 S:F4 P:nvUBdizc 
    $87E8:E6 61     INC $0061 = #$03                             A:2A X:00 Y:09 S:F4 P:nvUBdizc 
    $87EA:A5 61     LDA $0061 = #$04                             A:2A X:00 Y:09 S:F4 P:nvUBdizc 
    $87EC:20 07 B9  JSR $B907                                    A:04 X:00 Y:09 S:F4 P:nvUBdizc 
        B907 : reduce_Yspeed(A)
    $87EF:D0 1C     BNE $880D                                    A:C7 X:00 Y:09 S:F4 P:NvUBdiZC 
        -> If not equal to 0, it means that we need to reverse speed and add the leftover.
    $87F5 : reverse_Ydirection2()

    $87FD:A5 C5     LDA $00C5 = #$00                             A:00 X:00 Y:1A S:F4 P:nvUBdiZC 
    $87FF:18        CLC                                          A:00 X:00 Y:1A S:F4 P:nvUBdiZC 
    $8800:65 0C     ADC $000C = #$08                             A:00 X:00 Y:1A S:F4 P:nvUBdiZc 
    $8802:85 C5     STA $00C5 = #$00                             A:08 X:00 Y:1A S:F4 P:nvUBdizc 
    $8804:90 02     BCC $8808                                    A:08 X:00 Y:1A S:F4 P:nvUBdizc 
    $8806:E6 61     INC $0061 = #$0D                             A:16 X:00 Y:03 S:F4 P:nvUBdizC 
    $8808:A5 61     LDA $0061 = #$06                             A:08 X:00 Y:1A S:F4 P:nvUBdizc 
    $880A:20 EC B8  JSR $B8EC                                    A:06 X:00 Y:1A S:F4 P:nvUBdizc 
        $B8EC : add_Yspeed(A)

    $880D : change_Xspeed()

$880D : change_Xspeed()

    -- Addresses :
        $0374 : Rocket direction
        $0336 : X direction
        $0062 : X acceleration
        $00C4 : ???
        $000D : Gravity related?
        $8866 : Determine if need to add or substract speed according to the direction of the pod!

    $880D:A5 62     LDA $0062 = #$0E                             A:00 X:00 Y:1A S:F4 P:NvUBdizc 
    $880F:F0 44     BEQ $8855                                    A:0E X:00 Y:1A S:F4 P:nvUBdizc 
        -> Si on n'a pas d'accelération à faire pour X, on saute ça!
        $8855:60        RTS (from $87D2) ------------------------------------------------------ 
    $8811:AD 74 03  LDA $0374 = #$1A                             A:0E X:00 Y:1A S:F4 P:nvUBdizc 
    $8814:38        SEC                                          A:1A X:00 Y:1A S:F4 P:nvUBdizc 
    $8815:E9 08     SBC #$08                                     A:1A X:00 Y:1A S:F4 P:nvUBdizC 
    $8817:29 1F     AND #$1F                                     A:12 X:00 Y:1A S:F4 P:nvUBdizC 
    $8819:A8        TAY                                          A:12 X:00 Y:1A S:F4 P:nvUBdizC 
    $881A:BD 36 03  LDA $0336,X @ $0336 = #$00                   A:12 X:00 Y:12 S:F4 P:nvUBdizC 
    $881D:29 01     AND #$01                                     A:00 X:00 Y:12 S:F4 P:nvUBdiZC 
    $881F:59 66 88  EOR $8866,Y @ $8878 = #$01                   A:00 X:00 Y:12 S:F4 P:nvUBdiZC 
    $8822:F0 21     BEQ $8845                                    A:01 X:00 Y:12 S:F4 P:nvUBdizC 
        $8845:A5 C4     LDA $00C4 = #$00                             A:00 X:00 Y:12 S:F4 P:nvUBdiZC 
        $8847:18        CLC                                          A:00 X:00 Y:12 S:F4 P:nvUBdiZC 
        $8848:65 0D     ADC $000D = #$00                             A:00 X:00 Y:12 S:F4 P:nvUBdiZc 
        $884A:85 C4     STA $00C4 = #$00                             A:00 X:00 Y:12 S:F4 P:nvUBdiZc 
        $884C:90 02     BCC $8850                                    A:00 X:00 Y:12 S:F4 P:nvUBdiZc 
            $8850:A5 62     LDA $0062 = #$0E                             A:00 X:00 Y:12 S:F4 P:nvUBdiZc 
            $8852:20 86 B8  JSR $B886                                    A:0E X:00 Y:12 S:F4 P:nvUBdizc 
                B886 : add_Xspeed(A)
            $8855:60        RTS (from $87D2) --------------------------- A:00 X:00 Y:12 S:F4 P:NvUBdizc 
    $8824:A5 C4     LDA $00C4 = #$03                             A:01 X:00 Y:07 S:F4 P:nvUBdizC 
    $8826:38        SEC                                          A:03 X:00 Y:07 S:F4 P:nvUBdizC 
    $8827:E5 0D     SBC $000D = #$00                             A:03 X:00 Y:07 S:F4 P:nvUBdizC 
    $8829:85 C4     STA $00C4 = #$03                             A:03 X:00 Y:07 S:F4 P:nvUBdizC 
    $882B:B0 02     BCS $882F                                    A:03 X:00 Y:07 S:F4 P:nvUBdizC 
        $882F:A5 62     LDA $0062 = #$03                             A:03 X:00 Y:07 S:F4 P:nvUBdizC 
        $8831:20 A1 B8  JSR $B8A1                                    A:0E X:00 Y:12 S:F4 P:nvUBdizC 
            B8A1 : reduce_Xspeed(A)
        $8834:D0 1F     BNE $8855                                    A:00 X:00 Y:11 S:F4 P:nvUBdiZC 
            $8855:60        RTS (from $87D2) --------------------------- A:00 X:00 Y:12 S:F4 P:NvUBdizc 
        $8836 : reverse_Xdirection()

$C87F : springeffect()
    $C87F:BD 7C 02  LDA $027C,X @ $027C = #$00                   A:08 X:00 Y:01 S:FB P:nvubdizc 
    $C882:D0 16     BNE $C89A                                    A:00 X:00 Y:01 S:FB P:nvubdiZc 
    $C884:A5 3B     LDA $003B = #$00                             A:00 X:00 Y:01 S:FB P:nvubdiZc 
    $C886:C9 0D     CMP #$0D                                     A:00 X:00 Y:01 S:FB P:nvubdiZc 
    $C888:B0 10     BCS $C89A                                    A:00 X:00 Y:01 S:FB P:Nvubdizc 
    $C88A:BD 5D 02  LDA $025D,X @ $025D = #$7C                   A:00 X:00 Y:01 S:FB P:Nvubdizc 
    $C88D:C9 40     CMP #$40                                     A:7C X:00 Y:01 S:FB P:nvubdizc 
    $C88F:B0 09     BCS $C89A                                    A:7C X:00 Y:01 S:FB P:nvubdizC 
        01:C891:A9 41     LDA #$41
        01:C893:38        SEC
        01:C894:FD 5D 02  SBC $025D,X @ $025D = #$10
        01:C897:0A        ASL
        01:C898:85 0C     STA $000C = #$00

8836 : reverse_Xdirection(A)
    -- This will reverse X's direction.
        A will already have the info on if you need to switch direction.
            A = 0 : Need to change direction
            A != 0 : No need to change direction

    -- $0336 : direction of X

    -- Summary

    $8836:A9 00     LDA #$00                                     A:00 X:00 Y:11 S:F4 P:nvUBdiZC 
    $8838:85 C4     STA $00C4 = #$01                             A:00 X:00 Y:11 S:F4 P:nvUBdiZC 
    $883A:BD 36 03  LDA $0336,X @ $0336 = #$00                   A:00 X:00 Y:11 S:F4 P:nvUBdiZC 
    $883D:49 01     EOR #$01                                     A:00 X:00 Y:11 S:F4 P:nvUBdiZC 
    $883F:9D 36 03  STA $0336,X @ $0336 = #$00                   A:01 X:00 Y:11 S:F4 P:nvUBdizC 
    $8842:4C 55 88  JMP $8855                                    A:01 X:00 Y:11 S:F4 P:nvUBdizC 
    $8855:60        RTS (from $87D2) --------------------------- A:01 X:00 Y:11 S:F4 P:nvUBdizC 

889F : reverse_Ydirection()
    -- Notes

    -- $0355 : Y direction

    -- Summary

    $88A1:AD 55 03  LDA $0355 = #$00                             A:00 X:00 Y:07 S:F6 P:nvubdiZc 
    $88A4:49 01     EOR #$01                                     A:00 X:00 Y:07 S:F6 P:nvubdiZc 
    $88A6:8D 55 03  STA $0355 = #$00                             A:01 X:00 Y:07 S:F6 P:nvubdizc 
    $88A9:4C C5 88  JMP $88C5                                    A:01 X:00 Y:07 S:F6 P:nvubdizc 
    $88C5:A6 66     LDX $0066 = #$00                             A:01 X:00 Y:07 S:F6 P:nvubdizc 
    $88C7:F0 C0     BEQ $8889                                    A:01 X:00 Y:07 S:F6 P:nvubdiZc 
    $8889:60        RTS (from $FFC8) --------------------------- A:01 X:00 Y:07 S:F6 P:nvubdiZc 

87F5 : reverse_Ydirection2()
    -- From my understanding, this reverse the direction, and keep the left over for an adding speed that is just next

    $87F1:A9 00     LDA #$00                                     A:C7 X:00 Y:09 S:F4 P:NvUBdiZC 
    $87F3:85 C5     STA $00C5 = #$2A                             A:00 X:00 Y:09 S:F4 P:nvUBdiZC 
    $87F5:BD 55 03  LDA $0355,X @ $0355 = #$00                   A:00 X:00 Y:09 S:F4 P:nvUBdiZC 
    $87F8:49 01     EOR #$01                                     A:00 X:00 Y:09 S:F4 P:nvUBdiZC 
    $87FA:9D 55 03  STA $0355,X @ $0355 = #$00                   A:01 X:00 Y:09 S:F4 P:nvUBdizC 

B886 : add_Xspeed(A)
    -- A register already have the acceleration
       Y register is not used in this function.
       X is used by this function.
            Probably to determine which speed to mess with.

    Adresses:
        $029B : X speed
        $02BA : X speed H

    $B886:18        CLC                                          A:0F X:00 Y:1E S:F2 P:nvUBdizC 
    $B887:7D 9B 02  ADC $029B,X @ $029B = #$00                   A:0F X:00 Y:1E S:F2 P:nvUBdizc 
    $B88A:9D 9B 02  STA $029B,X @ $029B = #$00                   A:0F X:00 Y:1E S:F2 P:nvUBdizc 
    $B88D:BD BA 02  LDA $02BA,X @ $02BA = #$03                   A:0F X:00 Y:1E S:F2 P:nvUBdizc 
    $B890:69 00     ADC #$00                                     A:03 X:00 Y:1E S:F2 P:nvUBdizc 
    $B892:C9 03     CMP #$03                                     A:03 X:00 Y:1E S:F2 P:nvUBdizc 
    $B894:90 07     BCC $B89D                                    A:03 X:00 Y:1E S:F2 P:nvUBdiZC 
        -> If the speed <= 3 : skip setting the max speed
    $B896:A9 00     LDA #$00                                     A:03 X:00 Y:1E S:F2 P:nvUBdiZC 
    $B898:9D 9B 02  STA $029B,X @ $029B = #$0F                   A:00 X:00 Y:1E S:F2 P:nvUBdiZC 
    $B89B:A9 03     LDA #$03                                     A:00 X:00 Y:1E S:F2 P:nvUBdiZC 
    $B89D:9D BA 02  STA $02BA,X @ $02BA = #$03                   A:03 X:00 Y:1E S:F2 P:nvUBdizC 
    $B8A0:60        RTS (from BB86)----------------------------- A:03 X:00 Y:1E S:F2 P:nvUBdizC 
 
B8A1 : reduce_Xspeed(A):
    --A register already have the acceleration
      X also determine which speed to change.

    --Addresses
        $0064 : Tempo address for storing acceleration
        $029B : X speed
        $02BA : X speed H

    --Summary

    $B8A1:85 64     STA $0064 = #$02                             A:10 X:00 Y:10 S:F2 P:nvUBdizC 
    $B8A3:BD 9B 02  LDA $029B,X @ $029B = #$08                   A:10 X:00 Y:10 S:F2 P:nvUBdizC 
    $B8A6:38        SEC                                          A:08 X:00 Y:10 S:F2 P:nvUBdizC 
    $B8A7:E5 64     SBC $0064 = #$10                             A:08 X:00 Y:10 S:F2 P:nvUBdizC 
    $B8A9:9D 9B 02  STA $029B,X @ $029B = #$08                   A:F8 X:00 Y:10 S:F2 P:NvUBdizc 
    $B8AC:BD BA 02  LDA $02BA,X @ $02BA = #$00                   A:F8 X:00 Y:10 S:F2 P:NvUBdizc 
    $B8AF:E9 00     SBC #$00                                     A:00 X:00 Y:10 S:F2 P:nvUBdiZc 
    $B8B1:10 32     BPL $B8E5                                    A:FF X:00 Y:10 S:F2 P:NvUBdizc 
        -> If the new value is positive : skip the reversing speed instructions
        $B8E5:9D BA 02  STA $02BA,X @ $02BA = #$02                   A:02 X:00 Y:12 S:F2 P:nvUBdizC 
        $B8E8:1D 9B 02  ORA $029B,X @ $029B = #$7F                   A:02 X:00 Y:12 S:F2 P:nvUBdizC 
        $B8EB:60        RTS (from $B8A1) --------------------------- A:7F X:00 Y:12 S:F2 P:nvUBdizC 
    $B8B3 reverse_Xspeed()

B8B3 : reverse_Xspeed()
    -- This is to change the current speed back to positive
       X register is the speed concerned

    -- Addresses
        $029B : X speed
        $02BA : X speed H

    -- Summary

    $B8B3:9D BA 02  STA $02BA,X @ $02BA = #$00                   A:FF X:00 Y:10 S:F2 P:NvUBdizc 
    $B8B6:BD 9B 02  LDA $029B,X @ $029B = #$F8                   A:FF X:00 Y:10 S:F2 P:NvUBdizc 
    $B8B9:49 FF     EOR #$FF                                     A:F8 X:00 Y:10 S:F2 P:NvUBdizc 
    $B8BB:18        CLC                                          A:07 X:00 Y:10 S:F2 P:nvUBdizc 
    $B8BC:69 01     ADC #$01                                     A:07 X:00 Y:10 S:F2 P:nvUBdizc 
    $B8BE:9D 9B 02  STA $029B,X @ $029B = #$F8                   A:08 X:00 Y:10 S:F2 P:nvUBdizc 
    $B8C1:BD BA 02  LDA $02BA,X @ $02BA = #$FF                   A:08 X:00 Y:10 S:F2 P:nvUBdizc 
    $B8C4:49 FF     EOR #$FF                                     A:FF X:00 Y:10 S:F2 P:NvUBdizc 
    $B8C6:69 00     ADC #$00                                     A:00 X:00 Y:10 S:F2 P:nvUBdiZc 
    $B8C8:9D BA 02  STA $02BA,X @ $02BA = #$FF                   A:00 X:00 Y:10 S:F2 P:nvUBdiZc 
    $B8CB:A9 00     LDA #$00                                     A:00 X:00 Y:10 S:F2 P:nvUBdiZc 
    $B8CD:60        RTS (from $B8A1) --------------------------- A:00 X:00 Y:10 S:F2 P:nvUBdiZc 

B8EC : add_Yspeed(A)
    -- A register already have the acceleration

    -- Addresses:
        $02D9 : Y speed
        $02F8 : Y speed H

    -- Summary

    $B8EC:18        CLC                                          A:02 X:00 Y:07 S:F4 P:nvubdizC 
    $B8ED:7D D9 02  ADC $02D9,X @ $02D9 = #$00                   A:02 X:00 Y:07 S:F4 P:nvubdizc 
    $B8F0:9D D9 02  STA $02D9,X @ $02D9 = #$00                   A:02 X:00 Y:07 S:F4 P:nvubdizc 
    $B8F3:BD F8 02  LDA $02F8,X @ $02F8 = #$03                   A:02 X:00 Y:07 S:F4 P:nvubdizc 
    $B8F6:69 00     ADC #$00                                     A:03 X:00 Y:07 S:F4 P:nvubdizc 
    $B8F8:C9 03     CMP #$03                                     A:03 X:00 Y:07 S:F4 P:nvubdizc 
    $B8FA:90 07     BCC $B903                                    A:03 X:00 Y:07 S:F4 P:nvubdiZC 
        -> If lower or equal to 3 : skip setting the max speed
        $B903:9D F8 02  STA $02F8,X @ $02F8 = #$03                   A:03 X:00 Y:07 S:F4 P:nvubdizC 
        $B906:60        RTS (from $B8EC) --------------------------- A:03 X:00 Y:07 S:F4 P:nvubdizC 
    $B8FC:A9 00     LDA #$00                                     A:03 X:00 Y:07 S:F4 P:nvubdiZC 
    $B8FE:9D D9 02  STA $02D9,X @ $02D9 = #$02                   A:00 X:00 Y:07 S:F4 P:nvubdiZC 
    $B901:A9 03     LDA #$03                                     A:00 X:00 Y:07 S:F4 P:nvubdiZC 
    $B903:9D F8 02  STA $02F8,X @ $02F8 = #$03                   A:03 X:00 Y:07 S:F4 P:nvubdizC 
    $B906:60        RTS (from $B8EC) --------------------------- A:03 X:00 Y:07 S:F4 P:nvubdizC 

B907 : reduce_Yspeed(A)
    -- A register already have the acceleration

    -- Addresses
        $02D9 : Y speed
        $02F8 : Y speed H

    -- Summary

    $B907:85 64     STA $0064 = #$10                             A:10 X:00 Y:00 S:F2 P:nvUBdizC 
    $B909:BD D9 02  LDA $02D9,X @ $02D9 = #$0B                   A:10 X:00 Y:00 S:F2 P:nvUBdizC 
    $B90C:38        SEC                                          A:0B X:00 Y:00 S:F2 P:nvUBdizC 
    $B90D:E5 64     SBC $0064 = #$10                             A:0B X:00 Y:00 S:F2 P:nvUBdizC 
    $B90F:9D D9 02  STA $02D9,X @ $02D9 = #$0B                   A:FB X:00 Y:00 S:F2 P:NvUBdizc 
    $B912:BD F8 02  LDA $02F8,X @ $02F8 = #$00                   A:FB X:00 Y:00 S:F2 P:NvUBdizc 
    $B915:E9 00     SBC #$00                                     A:00 X:00 Y:00 S:F2 P:nvUBdiZc 
    $B917:10 32     BPL $B94B                                    A:FF X:00 Y:00 S:F2 P:NvUBdizc 
        -> If speed is positive : no need to reverse the speed
        $B94B:9D F8 02  STA $02F8,X @ $02F8 = #$01                   A:01 X:00 Y:07 S:F4 P:nvubdizC 
        $B94E:1D D9 02  ORA $02D9,X @ $02D9 = #$64                   A:01 X:00 Y:07 S:F4 P:nvubdizC 
        $B951:60        RTS (from $B907) --------------------------- A:65 X:00 Y:07 S:F4 P:nvubdizC 
    $B919: reverse_Yspeed()

B919 : reverse_Yspeed()
    $B919:9D F8 02  STA $02F8,X @ $02F8 = #$00                   A:FF X:00 Y:00 S:F2 P:NvUBdizc 
    $B91C:BD D9 02  LDA $02D9,X @ $02D9 = #$FB                   A:FF X:00 Y:00 S:F2 P:NvUBdizc 
    $B91F:49 FF     EOR #$FF                                     A:FB X:00 Y:00 S:F2 P:NvUBdizc 
    $B921:18        CLC                                          A:04 X:00 Y:00 S:F2 P:nvUBdizc 
    $B922:69 01     ADC #$01                                     A:04 X:00 Y:00 S:F2 P:nvUBdizc 
    $B924:9D D9 02  STA $02D9,X @ $02D9 = #$FB                   A:05 X:00 Y:00 S:F2 P:nvUBdizc 
    $B927:BD F8 02  LDA $02F8,X @ $02F8 = #$FF                   A:05 X:00 Y:00 S:F2 P:nvUBdizc 
    $B92A:49 FF     EOR #$FF                                     A:FF X:00 Y:00 S:F2 P:NvUBdizc 
    $B92C:69 00     ADC #$00                                     A:00 X:00 Y:00 S:F2 P:nvUBdiZc 
    $B92E:9D F8 02  STA $02F8,X @ $02F8 = #$FF                   A:00 X:00 Y:00 S:F2 P:nvUBdiZc 
    $B931:A9 00     LDA #$00                                     A:00 X:00 Y:00 S:F2 P:nvUBdiZc 
    $B933:60        RTS (from $B907) --------------------------- A:00 X:00 Y:00 S:F2 P:nvUBdiZc 

8626 : place_item()
    $8626:B9 13 05  LDA $0513,Y @ $0515 = #$03                   A:01 X:2C Y:02 S:F8 P:NvUBdizc 
    $8629:48        PHA                                          A:03 X:2C Y:02 S:F8 P:nvUBdizc 
    $865B:A6 04     LDX $0004 = #$0B                             A:00 X:0F Y:02 S:F7 P:nvUBdiZC 
    $865D:68        PLA                                          A:00 X:0B Y:02 S:F7 P:nvUBdizC 
    $865E:9D B2 03  STA $03B2,X @ $03BD = #$18                   A:03 X:0B Y:02 S:F8 P:nvUBdizC 
    $8661:A8        TAY                                          A:03 X:0B Y:02 S:F8 P:nvUBdizC 
    $8662:B9 B1 86  LDA $86B1,Y @ $86B4 = #$59                   A:03 X:0B Y:03 S:F8 P:nvUBdizC 
    $8665:9D 74 03  STA $0374,X @ $037F = #$8C                   A:59 X:0B Y:03 S:F8 P:nvUBdizC 
    $8668:B9 CD 86  LDA $86CD,Y @ $86D0 = #$0A                   A:59 X:0B Y:03 S:F8 P:nvUBdizC 
    $866B:9D 17 03  STA $0317,X @ $0322 = #$00                   A:0A X:0B Y:03 S:F8 P:nvUBdizC 
    $866E:A9 00     LDA #$00                                     A:0A X:0B Y:03 S:F8 P:nvUBdizC 
    $8670:9D 36 03  STA $0336,X @ $0341 = #$00                   A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $8673:9D 55 03  STA $0355,X @ $0360 = #$00                   A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $8676:9D 9B 02  STA $029B,X @ $02A6 = #$00                   A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $8679:9D BA 02  STA $02BA,X @ $02C5 = #$00                   A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $867C:9D D9 02  STA $02D9,X @ $02E4 = #$00                   A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $867F:9D F8 02  STA $02F8,X @ $0303 = #$00                   A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $8682:24 9B     BIT $009B = #$00                             A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $8684:30 03     BMI $8689                                    A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $8686:9D 22 04  STA $0422,X @ $042D = #$00                   A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $8689:A5 BB     LDA $00BB = #$02                             A:00 X:0B Y:03 S:F8 P:nvUBdiZC 
    $868B:A8        TAY                                          A:02 X:0B Y:03 S:F8 P:nvUBdizC 
    $868C:9D 93 03  STA $0393,X @ $039E = #$00                   A:02 X:0B Y:02 S:F8 P:nvUBdizC 
    $868F:B9 2D 05  LDA $052D,Y @ $052F = #$F9                   A:02 X:0B Y:02 S:F8 P:nvUBdizC 
    $8692:9D 00 02  STA $0200,X @ $020B = #$7B                   A:F9 X:0B Y:02 S:F8 P:NvUBdizC 
    $8695:B9 61 05  LDA $0561,Y @ $0563 = #$00                   A:F9 X:0B Y:02 S:F8 P:NvUBdizC 
    $8698:9D 1F 02  STA $021F,X @ $022A = #$02                   A:00 X:0B Y:02 S:F8 P:nvUBdiZC 
    $869B:B9 47 05  LDA $0547,Y @ $0549 = #$52                   A:00 X:0B Y:02 S:F8 P:nvUBdiZC 
    $869E:9D 5D 02  STA $025D,X @ $0268 = #$C2                   A:52 X:0B Y:02 S:F8 P:nvUBdizC 
    $86A1:B9 7B 05  LDA $057B,Y @ $057D = #$03                   A:52 X:0B Y:02 S:F8 P:nvUBdizC 
    $86A4:9D 7C 02  STA $027C,X @ $0287 = #$00                   A:03 X:0B Y:02 S:F8 P:nvUBdizC 
    $86A7:C8        INY                                          A:03 X:0B Y:02 S:F8 P:nvUBdizC 
    $86A8:C4 BA     CPY $00BA = #$06                             A:03 X:0B Y:03 S:F8 P:nvUBdizC 
    $86AA:D0 02     BNE $86AE                                    A:03 X:0B Y:03 S:F8 P:NvUBdizc 
    $86AE:84 BB     STY $00BB = #$02                             A:03 X:0B Y:03 S:F8 P:NvUBdizc 
    $86B0:60        RTS (from $FFC8) --------------------------- A:03 X:0B Y:03 S:F8 P:NvUBdizc 
